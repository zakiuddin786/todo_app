name: Provision of Ec2 instance and configuration with Ansible

on:
 push:
  branches:
   - main

jobs: 
 provision_ec2:
  runs-on: ubuntu-latest
  steps:
   - name: Checkout repo
     uses: actions/checkout@v2

   - name: Setup Python 3.x
     uses: actions/setup-python@v2
     with:
      python-version: "3.10"
      
   - name: Install  dependenies
     run: |
      python -m pip install --upgrade pip
      pip install ansible boto3 requests
      ansible-galaxy collection install amazon.aws 
      ansible-galaxy collection install community.docker --force
    
   - name : Configure AWS credentials
     uses: aws-actions/configure-aws-credentials@v1
     with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
        aws-region: ap-south-1

   - name: Setup Terraform
     uses: hashicorp/setup-terraform@v1


   - name: Terraform Init
     run: |
      cd terraform
      terraform init

   - name: Providing execute permissions
     run : |
        chmod +x terraform/terraform.sh
        ls -la terraform/terraform.sh
        chmod +x todo-frontend/deploy_frontend.sh
        ls -la todo-frontend/deploy_frontend.sh

   - name: Terraform Apply
     run: |
      cd terraform 
      ./terraform.sh dev apply

   - name: Create SSH Key file
     run : |
       mkdir -p ~/.ssh
       echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/ec2_key.pem
       chmod 400 ~/.ssh/ec2_key.pem
    
   - name: Debug SSH key
     run : ls -l ~/.ssh/ec2_key.pem

   - name: Run Ansible Playbook for deploying backend
     run : |
      ansible-playbook \
      -i ansible/inventory \
      -e "ec2_ssh_key_path=~/.ssh/ec2_key.pem" \
      ansible/playbooks/provision_and_configure_server.yml 
     env: 
      AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY_ID:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      EC2_SSH_KEY_PATH: ~/.ssh/ec2_key.pem
      ANSIBLE_HOST_KEY_CHECKING: False

   - name: Extract S3 bucket name from inventory
     id: get-bucket
     run: |
      BUCKET_NAME=$(grep "frontend_bucket_name=" ansible/inventory | cut -d"=" -f2)
      echo "bucket_name=$BUCKET_NAME" >> $GITHUB_OUTPUT

   - name: Extract cloudfront distribution id from inventory
     id: get-cf-distribution
     run: |
        CF_DISTRIBUTION_NAME=$(grep "cloudfront_distribution_id=" ansible/inventory | cut -d"=" -f2)
        echo "cloudfront_distribution_id=$CF_DISTRIBUTION_NAME" >> $GITHUB_OUTPUT

   - name: Deploy Frontend
     run: |
      cd todo-frontend
      ./deploy_frontend.sh "${{ steps.get-bucket.outputs.bucket_name}}" "${{ steps.get-cf-distribution.outputs.cloudfront_distribution_id}}"
     env: 
        AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY_ID:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ap-south-1

      


    



    




